// AUTOGENERATED BY pkg/config/gen
// DO NOT EDIT.

package config

func storagenodeConfig() []Option {
	return []Option{
		
		{
			Name:        "identity.cert-path",
			Description: "path to the certificate chain for this identity",
			Default:     "$IDENTITYDIR/identity.cert",
		},
		{
			Name:        "identity.key-path",
			Description: "path to the private key for this identity",
			Default:     "$IDENTITYDIR/identity.key",
		},
		{
			Name:        "server.config.revocation-dburl",
			Description: "url for revocation database (e.g. bolt://some.db OR redis://127.0.0.1:6378?db=2&password=abc123)",
			Default:     "bolt://$CONFDIR/revocations.db",
		},
		{
			Name:        "server.config.peer-ca-whitelist-path",
			Description: "path to the CA cert whitelist (peer identities must be signed by one these to be verified). this will override the default peer whitelist",
			Default:     "",
		},
		{
			Name:        "server.config.use-peer-ca-whitelist",
			Description: "if true, uses peer ca whitelist checking",
			Default:     "",
		},
		{
			Name:        "server.config.peer-id-versions",
			Description: "identity version(s) the server will be allowed to talk to",
			Default:     "latest",
		},
		{
			Name:        "server.config.extensions.revocation",
			Description: "if true, client leaves may contain the most recent certificate revocation for the current certificate",
			Default:     "true",
		},
		{
			Name:        "server.config.extensions.whitelist-signed-leaf",
			Description: "if true, client leaves must contain a valid \"signed certificate extension\" (NB: verified against certs in the peer ca whitelist; i.e. if true, a whitelist must be provided)",
			Default:     "false",
		},
		{
			Name:        "server.address",
			Description: "public address to listen on",
			Default:     ":7777",
		},
		{
			Name:        "server.private-address",
			Description: "private address to listen on",
			Default:     "127.0.0.1:7778",
		},
		{
			Name:        "server.disable-quic",
			Description: "disable QUIC listener on a server",
			Default:     "false",
		},
		{
			Name:        "server.disable-tcptls",
			Description: "disable TCP/TLS listener on a server",
			Default:     "",
		},
		{
			Name:        "server.debug-log-traffic",
			Description: "",
			Default:     "false",
		},
		{
			Name:        "debug.address",
			Description: "",
			Default:     "",
		},
		{
			Name:        "debug.control-title",
			Description: "",
			Default:     "",
		},
		{
			Name:        "debug.control",
			Description: "expose control panel",
			Default:     "",
		},
		{
			Name:        "preflight.local-time-check",
			Description: "whether or not preflight check for local system clock is enabled on the satellite side. When disabling this feature, your storagenode may not setup correctly.",
			Default:     "true",
		},
		{
			Name:        "preflight.database-check",
			Description: "whether or not preflight check for database is enabled.",
			Default:     "true",
		},
		{
			Name:        "contact.external-address",
			Description: "the public address of the node, useful for nodes behind NAT",
			Default:     "",
		},
		{
			Name:        "contact.interval",
			Description: "how frequently the node contact chore should run",
			Default:     "",
		},
		{
			Name:        "operator.email",
			Description: "operator email address",
			Default:     "",
		},
		{
			Name:        "operator.wallet",
			Description: "operator wallet address",
			Default:     "",
		},
		{
			Name:        "operator.wallet-features",
			Description: "operator wallet features",
			Default:     "",
		},
		{
			Name:        "storage.path",
			Description: "path to store data in",
			Default:     "$CONFDIR/storage",
		},
		{
			Name:        "storage.whitelisted-satellites",
			Description: "a comma-separated list of approved satellite node urls (unused)",
			Default:     "",
		},
		{
			Name:        "storage.allocated-disk-space",
			Description: "total allocated disk space in bytes",
			Default:     "1TB",
		},
		{
			Name:        "storage.allocated-bandwidth",
			Description: "total allocated bandwidth in bytes (deprecated)",
			Default:     "0B",
		},
		{
			Name:        "storage.k-bucket-refresh-interval",
			Description: "how frequently Kademlia bucket should be refreshed with node stats",
			Default:     "1h0m0s",
		},
		{
			Name:        "storage2.database-dir",
			Description: "directory to store databases. if empty, uses data path",
			Default:     "",
		},
		{
			Name:        "storage2.expiration-grace-period",
			Description: "how soon before expiration date should things be considered expired",
			Default:     "48h0m0s",
		},
		{
			Name:        "storage2.max-concurrent-requests",
			Description: "how many concurrent requests are allowed, before uploads are rejected. 0 represents unlimited.",
			Default:     "0",
		},
		{
			Name:        "storage2.delete-workers",
			Description: "how many piece delete workers",
			Default:     "1",
		},
		{
			Name:        "storage2.delete-queue-size",
			Description: "size of the piece delete queue",
			Default:     "10000",
		},
		{
			Name:        "storage2.order-limit-grace-period",
			Description: "how long after OrderLimit creation date are OrderLimits no longer accepted",
			Default:     "1h0m0s",
		},
		{
			Name:        "storage2.cache-sync-interval",
			Description: "how often the space used cache is synced to persistent storage",
			Default:     "",
		},
		{
			Name:        "storage2.piece-scan-on-startup",
			Description: "if set to true, all pieces disk usage is recalculated on startup",
			Default:     "true",
		},
		{
			Name:        "storage2.stream-operation-timeout",
			Description: "how long to spend waiting for a stream operation before canceling",
			Default:     "30m",
		},
		{
			Name:        "storage2.retain-time-buffer",
			Description: "allows for small differences in the satellite and storagenode clocks",
			Default:     "48h0m0s",
		},
		{
			Name:        "storage2.report-capacity-threshold",
			Description: "threshold below which to immediately notify satellite of capacity",
			Default:     "500MB",
		},
		{
			Name:        "storage2.max-used-serials-size",
			Description: "amount of memory allowed for used serials store - once surpassed, serials will be dropped at random",
			Default:     "1MB",
		},
		{
			Name:        "storage2.min-upload-speed",
			Description: "a client upload speed should not be lower than MinUploadSpeed in bytes-per-second (E.g: 1Mb), otherwise, it will be flagged as slow-connection and potentially be closed",
			Default:     "0Mb",
		},
		{
			Name:        "storage2.min-upload-speed-grace-duration",
			Description: "if MinUploadSpeed is configured, after a period of time after the client initiated the upload, the server will flag unusually slow upload client",
			Default:     "0h0m10s",
		},
		{
			Name:        "storage2.min-upload-speed-congestion-threshold",
			Description: "if the portion defined by the total number of alive connection per MaxConcurrentRequest reaches this threshold, a slow upload client will no longer be monitored and flagged",
			Default:     "0.8",
		},
		{
			Name:        "storage2.trust.sources",
			Description: "list of trust sources",
			Default:     "",
		},
		{
			Name:        "storage2.trust.exclusions.rules",
			Description: "",
			Default:     "",
		},
		{
			Name:        "storage2.trust.refresh-interval",
			Description: "how often the trust pool should be refreshed",
			Default:     "6h",
		},
		{
			Name:        "storage2.trust.cache-path",
			Description: "file path where trust lists should be cached",
			Default:     "${CONFDIR}/trust-cache.json",
		},
		{
			Name:        "storage2.monitor.interval",
			Description: "how frequently Kademlia bucket should be refreshed with node stats",
			Default:     "1h0m0s",
		},
		{
			Name:        "storage2.monitor.verify-dir-readable-interval",
			Description: "how frequently to verify the location and readability of the storage directory",
			Default:     "",
		},
		{
			Name:        "storage2.monitor.verify-dir-writable-interval",
			Description: "how frequently to verify writability of storage directory",
			Default:     "",
		},
		{
			Name:        "storage2.monitor.minimum-disk-space",
			Description: "how much disk space a node at minimum has to advertise",
			Default:     "500GB",
		},
		{
			Name:        "storage2.monitor.minimum-bandwidth",
			Description: "how much bandwidth a node at minimum has to advertise (deprecated)",
			Default:     "0TB",
		},
		{
			Name:        "storage2.monitor.notify-low-disk-cooldown",
			Description: "minimum length of time between capacity reports",
			Default:     "10m",
		},
		{
			Name:        "storage2.orders.max-sleep",
			Description: "maximum duration to wait before trying to send orders",
			Default:     "",
		},
		{
			Name:        "storage2.orders.sender-interval",
			Description: "duration between sending",
			Default:     "",
		},
		{
			Name:        "storage2.orders.sender-timeout",
			Description: "timeout for sending",
			Default:     "1h0m0s",
		},
		{
			Name:        "storage2.orders.sender-dial-timeout",
			Description: "timeout for dialing satellite during sending orders",
			Default:     "1m0s",
		},
		{
			Name:        "storage2.orders.cleanup-interval",
			Description: "duration between archive cleanups",
			Default:     "5m0s",
		},
		{
			Name:        "storage2.orders.archive-ttl",
			Description: "length of time to archive orders before deletion",
			Default:     "168h0m0s",
		},
		{
			Name:        "storage2.orders.path",
			Description: "path to store order limit files in",
			Default:     "$CONFDIR/orders",
		},
		{
			Name:        "collector.interval",
			Description: "how frequently expired pieces are collected",
			Default:     "1h0m0s",
		},
		{
			Name:        "filestore.write-buffer-size",
			Description: "in-memory buffer for uploads",
			Default:     "128KiB",
		},
		{
			Name:        "pieces.write-prealloc-size",
			Description: "file preallocated for uploading",
			Default:     "4MiB",
		},
		{
			Name:        "pieces.delete-to-trash",
			Description: "move pieces to trash upon deletion. Warning: if set to false, you risk disqualification for failed audits if a satellite database is restored from backup.",
			Default:     "true",
		},
		{
			Name:        "retain.max-time-skew",
			Description: "allows for small differences in the satellite and storagenode clocks",
			Default:     "72h0m0s",
		},
		{
			Name:        "retain.status",
			Description: "allows configuration to enable, disable, or test retain requests from the satellite. Options: (disabled/enabled/debug)",
			Default:     "enabled",
		},
		{
			Name:        "retain.concurrency",
			Description: "how many concurrent retain requests can be processed at the same time.",
			Default:     "5",
		},
		{
			Name:        "nodestats.max-sleep",
			Description: "maximum duration to wait before requesting data",
			Default:     "",
		},
		{
			Name:        "nodestats.reputation-sync",
			Description: "how often to sync reputation",
			Default:     "",
		},
		{
			Name:        "nodestats.storage-sync",
			Description: "how often to sync storage",
			Default:     "",
		},
		{
			Name:        "console.address",
			Description: "server address of the api gateway and frontend app",
			Default:     "127.0.0.1:14002",
		},
		{
			Name:        "console.static-dir",
			Description: "path to static resources",
			Default:     "",
		},
		{
			Name:        "healthcheck.details",
			Description: "Enable additional details about the satellite connections via the HTTP healthcheck.",
			Default:     "false",
		},
		{
			Name:        "healthcheck.enabled",
			Description: "Provide health endpoint (including suspension/audit failures) on main public port, but HTTP protocol.",
			Default:     "true",
		},
		{
			Name:        "version.client-config.server-address",
			Description: "server address to check its version against",
			Default:     "https://version.storj.io",
		},
		{
			Name:        "version.client-config.request-timeout",
			Description: "Request timeout for version checks",
			Default:     "0h1m0s",
		},
		{
			Name:        "version.check-interval",
			Description: "Interval to check the version",
			Default:     "0h15m0s",
		},
		{
			Name:        "bandwidth.interval",
			Description: "how frequently bandwidth usage rollups are calculated",
			Default:     "1h0m0s",
		},
		{
			Name:        "graceful-exit.chore-interval",
			Description: "how often to run the chore to check for satellites for the node to exit.",
			Default:     "",
		},
		{
			Name:        "graceful-exit.num-workers",
			Description: "number of workers to handle satellite exits",
			Default:     "4",
		},
		{
			Name:        "graceful-exit.num-concurrent-transfers",
			Description: "number of concurrent transfers per graceful exit worker",
			Default:     "5",
		},
		{
			Name:        "graceful-exit.min-bytes-per-second",
			Description: "the minimum acceptable bytes that an exiting node can transfer per second to the new node",
			Default:     "5KB",
		},
		{
			Name:        "graceful-exit.min-download-timeout",
			Description: "the minimum duration for downloading a piece from storage nodes before timing out",
			Default:     "2m",
		},
   }
}
